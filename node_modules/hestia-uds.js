// hestia-nodeJS Unix Domain Socket wrapper

const http = require('http')
const fs = require('fs')

// Cleanup orphan socket
try {
	if (typeof process.env.PORT === 'string' && process.env.PORT.split('/').pop() === 'hestia-nodeJS.sock' && fs.statSync(process.env.PORT)?.isSocket())
		fs.rmSync(process.env.PORT)
}
catch (e) {}

http._createServer = http.createServer

http.createServer = function (...args) {
	let ret = http._createServer(...args)

	ret.prependListener('listening', () => {
		try {
			// Adjust socket permission to allow writing for group www-data
			let port = ret.address()

			if (typeof port === 'string' && port.split('/').pop() === 'hestia-nodeJS.sock')
				fs.chmodSync(port, 0o770)
		}
		catch (e) {
			console.error('[hestia-nodeJS] Failed to adjust socket permission.', e)
		}
	})

	ret.prependListener('request', (req, res) => {
		req.ip = req.headers['x-forwarded-for'] || req.headers['x-real-ip'] || req.socket.remoteAddress
	})

	return ret
}

module.exports = http
